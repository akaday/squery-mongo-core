(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{112:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},b=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=d(r),p=n,m=b["".concat(c,".").concat(p)]||b[p]||u[p]||o;return r?a.a.createElement(m,l(l({ref:t},s),{},{components:r})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var s=2;s<o;s++)c[s]=r[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},74:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return b}));var n=r(2),a=r(6),o=(r(0),r(112)),c=["components"],l={id:"intro",title:" ",sidebar_label:"Intro",slug:"/encodedecode/intro"},i={unversionedId:"encodedecode/intro",id:"encodedecode/intro",isDocsHomePage:!1,title:" ",description:"Encode-Decode",source:"@site/docs/encodedecode/intro.md",slug:"/encodedecode/intro",permalink:"/cmql-core/docs/encodedecode/intro",version:"current",sidebar_label:"Intro",sidebar:"someSidebar",previous:{title:" ",permalink:"/cmql-core/docs/javascript-clojurescript/functions"},next:{title:" ",permalink:"/cmql-core/docs/encodedecode/cmql-j"}},s=[{value:"Encode-Decode",id:"encode-decode",children:[{value:"cMQL requirements",id:"cmql-requirements",children:[]}]},{value:"Encode in cMQL",id:"encode-in-cmql",children:[]},{value:"Decode",id:"decode",children:[{value:"to Java",id:"to-java",children:[]},{value:"to Clojure",id:"to-clojure",children:[]},{value:"to Javascript",id:"to-javascript",children:[]},{value:"to Clojurescript",id:"to-clojurescript",children:[]}]}],d={rightToc:s};function b(e){var t=e.components,r=Object(a.a)(e,c);return Object(o.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"encode-decode"},"Encode-Decode"),Object(o.b)("p",null,"MongoDB receives and sends data in BSON",Object(o.b)("br",{parentName:"p"}),"\n","The driver keeps the data in the language specific datastructures"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Encode",Object(o.b)("br",{parentName:"li"}),"driver data ",Object(o.b)("strong",{parentName:"li"},"--encode--\x3e")," BSON "),Object(o.b)("li",{parentName:"ul"},"Decode",Object(o.b)("br",{parentName:"li"}),"BSON ",Object(o.b)("strong",{parentName:"li"},"--decode--\x3e")," driver data  ")),Object(o.b)("h3",{id:"cmql-requirements"},"cMQL requirements"),Object(o.b)("p",null,"cMQL must be able to encode and decode the data in all the supported languages"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"cMQL-j should encode and decode\nJava Documents <-> BSON  (provided by the driver)\nClojure maps <-> BSON    (custom org.mongodb/bson implementation)"),Object(o.b)("li",{parentName:"ul"},"cMQL-js",Object(o.b)("br",{parentName:"li"}),"js objects <-> BSON      (provided by the driver)\nClojure maps <-> BSON    (custom js-bson implementation)")),Object(o.b)("p",null,"cMQL does that directly from and to BSON,without extra transformation step for perfomance reasons.\nFor example it doesn't convert a Clojure map to a Java Document and then to BSON.\ncMQL goes directly from Clojure map to BSON."),Object(o.b)("p",null,"This required 2 modified versions of BSON than the default that the Java driver and the Javascript driver\nare using."),Object(o.b)("h2",{id:"encode-in-cmql"},"Encode in cMQL"),Object(o.b)("p",null,"Encode is auto-detected.If the user gives a Clojure map,encoder see it and encode accordinally.",Object(o.b)("br",{parentName:"p"}),"\n","Its auto-detected in both cMQL-j and cMQL-js.  "),Object(o.b)("p",null,"User sets the encode methods only for other classes like when using Pojo in Java  "),Object(o.b)("h2",{id:"decode"},"Decode"),Object(o.b)("p",null,"On decode 3 things were important  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"decode directly from BSON  "),Object(o.b)("li",{parentName:"ul"},"save the data in a form that can be used as normal clojure maps/vectors    "),Object(o.b)("li",{parentName:"ul"},"each query to be able to select the decode method  ")),Object(o.b)("p",null,"cMQL "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"cMQL-j can return Clojure(clojure-maps/vectors)/Java(java-map/arraylist) data structures"),Object(o.b)("li",{parentName:"ul"},"cMQL-js can return Clojure(clojure-maps/vectors)/JS(objects/arrays)")),Object(o.b)("h3",{id:"to-java"},"to Java"),Object(o.b)("p",null,"Java default classes to used to save documents and arrays."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Documents\nJava driver uses a Document class,that inside holds a LinkedHashMap"),Object(o.b)("li",{parentName:"ul"},"Arrays are ArrayLists")),Object(o.b)("p",null,"This is done by the driver"),Object(o.b)("h3",{id:"to-clojure"},"to Clojure"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Documents",Object(o.b)("br",{parentName:"li"}),"Java Document class,that inside holds a Clojure map",Object(o.b)("br",{parentName:"li"}),"Keys become keywords  "),Object(o.b)("li",{parentName:"ul"},"Arrays are vectors  ")),Object(o.b)("p",null,"Documents implement all Clojure interfaces and they behave like Clojure maps.\nThere is no need to take the Clojure map from inside,they are them selves maps."),Object(o.b)("p",null,"For example if doc1 is instance of a Document class,that contains inside a Clojure map\ni can use it as a normal Clojure map,for example i can"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-text"},'(assoc doc1 "a" "b")  \n')),Object(o.b)("p",null,"We only need to set the registry to be clj-registry,no need to give a return-class,\nin both cases the return class is a Document class."),Object(o.b)("p",null,"Perfomance is very good,as like to native java.  "),Object(o.b)("h3",{id:"to-javascript"},"to Javascript"),Object(o.b)("p",null,"Javascript uses objects for documents and arrays for arrays"),Object(o.b)("h3",{id:"to-clojurescript"},"to Clojurescript"),Object(o.b)("p",null,"cMQL has a modified ",Object(o.b)("a",{parentName:"p",href:"https://github.com/mongodb/js-bson"},"js-bson")," implementation"),Object(o.b)("p",null,"2 Options exists for decode"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"clojure-maps/vectors"),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",{parentName:"li",href:"https://github.com/mfikes/cljs-bean"},"beans"),"/vectors")),Object(o.b)("p",null,"For now they are separated implementations of js-bson"),Object(o.b)("p",null,"The reason for using bean is perfomance,clojurescript maps is >8 keys,become hashmaps and they are 2x-3x slower in creation\nfrom the js-objects"),Object(o.b)("p",null,"Beans are as fast as js-objects,and allows us to use the bean as if it was a normal clojure map\nFor example we can assoc,get,map etc"))}b.isMDXComponent=!0}}]);