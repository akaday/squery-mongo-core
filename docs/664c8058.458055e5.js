(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{112:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return j}));var n=r(0),c=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var p=c.a.createContext({}),u=function(e){var t=c.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=c.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(r),d=n,j=s["".concat(l,".").concat(d)]||s[d]||b[d]||a;return r?c.a.createElement(j,o(o({ref:t},p),{},{components:r})):c.a.createElement(j,o({ref:t},p))}));function j(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return c.a.createElement.apply(null,l)}return c.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return s}));var n=r(2),c=r(6),a=(r(0),r(112)),l=["components"],o={id:"clojurescriptapp",title:" ",sidebar_label:"Clojurescript",slug:"/cmqlapp/clojurescriptapp"},i={unversionedId:"cmqlapp/clojurescriptapp",id:"cmqlapp/clojurescriptapp",isDocsHomePage:!1,title:" ",description:"Why cMQL for ClojureScript",source:"@site/docs/cmqlapp/clojurescriptapp.md",slug:"/cmqlapp/clojurescriptapp",permalink:"/cmql-core/docs/cmqlapp/clojurescriptapp",version:"current",sidebar_label:"Clojurescript",sidebar:"someSidebar",previous:{title:" ",permalink:"/cmql-core/docs/cmqlapp/nodejsapp"},next:{title:" ",permalink:"/cmql-core/docs/api/cmql-j"}},p=[{value:"Why cMQL for ClojureScript",id:"why-cmql-for-clojurescript",children:[]},{value:"Install cMQL",id:"install-cmql",children:[]},{value:"ClojureScript-app",id:"clojurescript-app",children:[{value:"Contents",id:"contents",children:[]},{value:"Init the app",id:"init-the-app",children:[]},{value:"Open the code",id:"open-the-code",children:[]},{value:"Run the code",id:"run-the-code",children:[]}]}],u={rightToc:p};function s(e){var t=e.components,r=Object(c.a)(e,l);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"why-cmql-for-clojurescript"},"Why cMQL for ClojureScript"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"its like querying MongoDB with ClojureScript (names and syntax)  "),Object(a.b)("li",{parentName:"ul"},"up to ",Object(a.b)("strong",{parentName:"li"},"3x")," less code from MQL"),Object(a.b)("li",{parentName:"ul"},"can unify MongoDB under 1 language",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"app in clojureScript"),Object(a.b)("li",{parentName:"ul"},"query with cMQL"),Object(a.b)("li",{parentName:"ul"},"server side with Clojurescript or cMQL wrappers or Wisp"))),Object(a.b)("li",{parentName:"ul"},"Fast, data encode/decode directly to ClojureScript maps vectors")),Object(a.b)("p",null,"For more details see ",Object(a.b)("a",{parentName:"p",href:"/docs/intro/what"},"what?")," and ",Object(a.b)("a",{parentName:"p",href:"/docs/intro/why"},"why?"),"\nClojureScript programmers use cMQL-js"),Object(a.b)("h2",{id:"install-cmql"},"Install cMQL"),Object(a.b)("p",null,"First ",Object(a.b)("a",{parentName:"p",href:"/docs/cmqlapp/installcmql"},"install cMQL")," do all the steps.   "),Object(a.b)("h2",{id:"clojurescript-app"},"ClojureScript-app"),Object(a.b)("h3",{id:"contents"},"Contents"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"implementation of ",Object(a.b)("a",{parentName:"li",href:"https://github.com/mongodb-developer/nodejs-quickstart"},"Nodejs Quick Start")," in cmql-js")),Object(a.b)("p",null,"For more cMQL example see ",Object(a.b)("a",{parentName:"p",href:"www.cmql-live.org"},"cMQL-live")," and the code of ",Object(a.b)("a",{parentName:"p",href:"/cmqlapp/clojureapp"},"Clojureapp"),"\ncMQL-js queries the same with cMQL-j queries, only differences is the async calls of nodejs."),Object(a.b)("h3",{id:"init-the-app"},"Init the app"),Object(a.b)("p",null,"ClojureScriptapp uses shadow-clj as its build tool\nThere is a script file called ",Object(a.b)("inlineCode",{parentName:"p"},"init-shadow")," that does"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"npm install"),Object(a.b)("li",{parentName:"ul"},"copy the custom js files to support clojure<->bson direct encode/decode"),Object(a.b)("li",{parentName:"ul"},"starts the shadow-cljs server for fast compile"),Object(a.b)("li",{parentName:"ul"},"creates a pom file, to allow us to open the project with as maven project and find the code for auto-complete etc")),Object(a.b)("h3",{id:"open-the-code"},"Open the code"),Object(a.b)("p",null,"If you use intellijdea"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"open intellij idea"),Object(a.b)("li",{parentName:"ul"},"open project from existing resources"),Object(a.b)("li",{parentName:"ul"},"select the clojureappScript app"),Object(a.b)("li",{parentName:"ul"},"select ",Object(a.b)("strong",{parentName:"li"},"maven"))),Object(a.b)("p",null,"See and run the examples,run the namespaces independently   "),Object(a.b)("h3",{id:"run-the-code"},"Run the code"),Object(a.b)("p",null,"The code runs with a script called ",Object(a.b)("inlineCode",{parentName:"p"},"run-shadow"),"\nClojurescript-app it uses ",Object(a.b)("inlineCode",{parentName:"p"},":use")," in ",Object(a.b)("inlineCode",{parentName:"p"},"ns")," for ide auto complete,\nthat clojurescript doesn't support so the first thing is to remove this."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"runs the usecljs-0.1.0-SNAPSHOT-standalone.jar to make comment the ",Object(a.b)("inlineCode",{parentName:"li"},"use")),Object(a.b)("li",{parentName:"ul"},"compiles the project with shadow-cljs"),Object(a.b)("li",{parentName:"ul"},"runs the usecljs-0.1.0-SNAPSHOT-standalone.jar to uncoment the ",Object(a.b)("inlineCode",{parentName:"li"},"use")),Object(a.b)("li",{parentName:"ul"},"run the compiled ",Object(a.b)("inlineCode",{parentName:"li"},"main.js")," with node")),Object(a.b)("p",null,"This script can be run from terminal, or with intelijea run configurations and add shell-script (without execute in terminal option),\nto run from the Run button."))}s.isMDXComponent=!0}}]);