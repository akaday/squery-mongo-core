(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{112:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return d}));var r=a(0),n=a.n(r);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var b=n.a.createContext({}),p=function(e){var t=n.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=p(e.components);return n.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),s=p(a),m=r,d=s["".concat(o,".").concat(m)]||s[m]||u[m]||l;return a?n.a.createElement(d,c(c({ref:t},b),{},{components:a})):n.a.createElement(d,c({ref:t},b))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var b=2;b<l;b++)o[b]=a[b];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},85:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return s}));var r=a(2),n=a(6),l=(a(0),a(112)),o=["components"],c={id:"generatemql",title:" ",sidebar_label:"cMQL as Tool",slug:"/cmqltool/generatemql"},i={unversionedId:"cmqltool/generatemql",id:"cmqltool/generatemql",isDocsHomePage:!1,title:" ",description:"cMQL as tool",source:"@site/docs/cmqltool/generatemql.md",slug:"/cmqltool/generatemql",permalink:"/cmql-core/docs/cmqltool/generatemql",version:"current",sidebar_label:"cMQL as Tool",sidebar:"someSidebar",previous:{title:" ",permalink:"/cmql-core/docs/cMQL/commands"},next:{title:" ",permalink:"/cmql-core/docs/cqmlapp/intro"}},b=[{value:"cMQL as tool",id:"cmql-as-tool",children:[]},{value:"Embeded MQL",id:"embeded-mql",children:[]},{value:"Parsed MQL",id:"parsed-mql",children:[]},{value:"Advantages",id:"advantages",children:[]}],p={rightToc:b};function s(e){var t=e.components,a=Object(n.a)(e,o);return Object(l.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"cmql-as-tool"},"cMQL as tool"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"cMQL generates MQL and "),Object(l.b)("li",{parentName:"ul"},"MQL can be embeded in code or parsed",Object(l.b)("br",{parentName:"li"}),"for example ",Object(l.b)("inlineCode",{parentName:"li"},'Document doc = Document.parse("{\\"foo\\":1}");'),"\nor  ",Object(l.b)("inlineCode",{parentName:"li"},"Document doc = Document.parse(readFile(q1));")),Object(l.b)("li",{parentName:"ul"},"json support allows us to run MQL queries in all drivers   ")),Object(l.b)("p",null,"This method is easiest way to try cMQL, without writting a cMQL app.",Object(l.b)("br",{parentName:"p"}),"\n","But it can be used also as a method to use cMQL/MQL in general.  "),Object(l.b)("h2",{id:"embeded-mql"},"Embeded MQL"),Object(l.b)("p",null,"Manual way, copy paste the code, replace possible variables by hand."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"www.cmql-live.org"},"cMQL-live")," write cMQL or local auto-convert"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"(q (= :age 25))"),"  generates      "),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},'[{"$match": {"$expr": {"$eq": ["$age", 25]}}}]'),"  paste it in code     "),Object(l.b)("li",{parentName:"ul"},"make few changes if needed like add driver variables etc")),Object(l.b)("h2",{id:"parsed-mql"},"Parsed MQL"),Object(l.b)("p",null,"Automated way, generate code, auto dynamic replace variables."),Object(l.b)("p",null,"Here an example will be used that the variables are auto-replaced also\n",Object(l.b)("inlineCode",{parentName:"p"},"$$$age")," is a random way to symbolize the driver variable name."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"www.cmql-live.org"},"cMQL-live")," write cMQL, or local auto-convert"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},'(q (= :age "$$$age"))')," generates"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},'[{"$match": {"$expr": {"$eq": ["$age", "$$$age"]}}}]')," save to a text file q1.json"),Object(l.b)("li",{parentName:"ul"},"at run-time call like ",Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",{parentName:"pre"},'runQ1(col,"q1",age,...)\n{\n  q1JSON=read_file(q1)\n  q1= parse(q1JSON)     \n  argHash={"age" age, ....}\n  ;;a loop to replace the args, "$$$age" will take the age value\n  q1=addDynamicArgs(q1,argHash); \n  col.aggregate(q1);\n}\n'))),Object(l.b)("li",{parentName:"ul"},"cost of making a text file to json, and replace the variables its almost zero, queries are so small data structures")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"instead of cmql-live, this can be done local and automated",Object(l.b)("br",{parentName:"p"}),"\n","for example all queries in a directory q1,q2 ... converted to q1.json,q2.json")),Object(l.b)("p",null,"This automatic-way requires some a cmql-app to convert that directory of cmql queries,",Object(l.b)("br",{parentName:"p"}),"\n","and some driver specific code to add the dynamic args"),Object(l.b)("h2",{id:"advantages"},"Advantages"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"the easiest way to try cMQL  "),Object(l.b)("li",{parentName:"ul"},"can be made to work in all drivers  "),Object(l.b)("li",{parentName:"ul"},"cost is practical zero")),Object(l.b)("p",null,"But for the languages that cMQL supports, there is even simpler way\nwith a simple function call to a cMQL app.",Object(l.b)("br",{parentName:"p"}),"\n","(clojure is made for easy interop)"))}s.isMDXComponent=!0}}]);